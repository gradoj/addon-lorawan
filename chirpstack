#!/bin/bash
### BEGIN INIT INFO
# Provides:          chirpstack
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: ChirpStack service
# Description:       Manages the ChirpStack server daemon
### END INIT INFO

# Configuration
NAME="chirpstack"
DAEMON="/usr/bin/chirpstack"
DAEMON_OPTS="-c /etc/chirpstack"
PIDFILE="/var/run/chirpstack/$NAME.pid"
LOGFILE="/var/log/chirpstack/$NAME.log"
USER="chirpstack"

# Functions
start() {
    if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE") 2>/dev/null; then
        echo "$NAME is already running."
        return 1
    fi

    echo "Starting $NAME..."
    # Ensure the log file directory exists and has the correct permissions
    mkdir -p $(dirname "$LOGFILE")
    chown -R $USER:$USER $(dirname "$LOGFILE")

    echo "Starting $NAME..."
    start-stop-daemon --start \
        --pidfile "$PIDFILE" --make-pidfile \
        --chuid "$USER" --exec "$DAEMON" -- $DAEMON_OPTS >> "$LOGFILE" 2>&1 &

    if [ $? -eq 0 ]; then
        echo "$NAME started."
    else
        echo "Failed to start $NAME."
    fi
}

stop() {
    if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE") 2>/dev/null; then
        echo "Stopping $NAME..."
        start-stop-daemon --stop --pidfile "$PIDFILE"
        rm -f "$PIDFILE"
        echo "$NAME stopped."
    else
        echo "$NAME is not running."
    fi
}

status() {
    if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE") 2>/dev/null; then
        echo "$NAME is running with PID $(cat "$PIDFILE")."
    else
        echo "$NAME is not running."
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
